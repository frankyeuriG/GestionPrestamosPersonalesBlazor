@page "/Pago"
@page "/Pago/{PagoId:int}"

@inject NotificationService notificationService
@inject PagosBLL pagosBLL
@inject PersonasBLL personasBLL
@inject PrestamosBLL prestamosBll

<EditForm Model="pago" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card">
        <div class="card-header">
            <h3>Registro de Pagos</h3>
        </div>

        <div class="card-body">
        </div>

        <div class="card-footer">
            <div class="mb-3 text-center" display: inline-block>
                <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">
                    <i class="oi oi-file" /> Nuevo
                </button>
                <button type="submit" class="btn btn-lg btn-success">
                    <i class="oi oi-document" /> Guardar
                </button>
                <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">
                    <i class="oi oi-trash" /> Eliminar
                </button>
            </div>
        </div>
    </div>
</EditForm>
@code {
    [Parameter]
    public int PagoId { get; set; }

    public Pagos pago { get; set; } = new Pagos();

    public void Nuevo()
    {
        pago = new Pagos();
        pago.Fecha = DateTime.Now;

    }

    public async Task Guardar()
    {
        pago.Fecha = DateTime.Now;
        pago.PersonaId = 1;
        pago.Monto = 100;
        pago.Concepto = "prestamo carro";

        pago.Detalle.Add(new PagosDetalle { PrestamoId = 1, ValorPagado = 100 });

        pago.Detalle.Add(new PagosDetalle { PrestamoId = 2, ValorPagado = 200 });

        await pagosBLL.Guardar(pago);

    }

    public async Task Eliminar()
    {

    }
}
