@page "/Persona"
@page "/Persona/{PersonaId:int}"

@inject PersonasBLL PersonasBLL
@inject NotificationService notificationService
@inject OcupacionesBLL ocupacionBLL
@inject PrestamosBLL PrestamosBLL

<EditForm Model="persona" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card">

        <div class="card-header">
            <h3>Registro de Personas</h3>
        </div>

        <div class="card-body">
            <form>
                @*PersonaId*@
                <div class="form-row align-items-center">
                    <div class="col">
                        <div class="mb-3">
                            <label>PersonaId</label>
                            <div class="input-group">
                                <InputNumber @bind-Value="persona.PersonaId" class="form-control col-4" />
                                <div class="input-group-append">
                                    <button type="button" class="btn btn-primary input-group-text" @onclick="Buscar">
                                        <i class="oi oi-magnifying-glass" /> Buscar
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                @*Nombres*@
                <div class="mb-3">
                    <label>Nombres</label>
                    <InputText @bind-Value="persona.Nombres" class="form-control" />
                    <ValidationMessage For="@(() => persona.Nombres)" />
                </div>
                @*Direccion*@
                <div class="mb-3">
                    <label>Direccion</label>
                    <InputText @bind-Value="persona.Direccion" class="form-control" />
                    <ValidationMessage For="@(() => persona.Direccion)" />
                </div>

                @*Email*@
                <div class="mb-3">
                    <label>Email</label>
                    <InputText @bind-Value="persona.Email"
                               class="form-control" />
                    <ValidationMessage For="@(() => persona.Email)" />
                </div>
                @*FechaNacimiento*@
                <div class="mb-3">
                    <label>Fecha De Nacimiento</label>
                    <InputDate @bind-Value="persona.FechaNacimiento"
                               class="form-control" />
                    <ValidationMessage For="@(() => persona.FechaNacimiento)" />
                </div>
                @*Telefono*@
                <div class="mb-3">
                    <label>Telefono</label>
                    <InputText @bind-Value="persona.Telefono"
                               class="form-control" />
                    <ValidationMessage For="@(() => persona.Telefono)" />
                </div>
                @*Balance*@
                <div class="mb-3">
                    <label>Balance</label>
                    <InputNumber readonly="true" @bind-Value="persona.Balance" class="form-control" />
                    <ValidationMessage For="@(() => persona.Balance)" />
                </div>
                <div class="mb-3 col">
                    <label>Ocupaciones</label>
                    <InputSelect class="form-select" @bind-Value="persona.OcupacionId">
                        @foreach (Ocupaciones persona in lista)
                        {
                                <option value="@persona.OcupacionId">@persona.Descripcion (ID: @persona.OcupacionId)</option>
                        }
                    </InputSelect>
                </div>

            </form>
        </div>
        <div class="card-footer">
            <div class="form-group text-center" display: inline-block>
                <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">
                    <i class="oi oi-file" /> Nuevo
                </button>
                <button type="submit" class="btn btn-lg btn-success">
                    <i class="oi oi-document" /> Guardar
                </button>
                <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">
                    <i class="oi oi-trash" /> Eliminar
                </button>
            </div>
        </div>
    </div>

</EditForm>

@code {
    [Parameter]
    public int PersonaId { get; set; }
    public Personas persona { get; set; } = new Personas();
    public String mensaje { get; set; } = "";
    public List<Ocupaciones> lista { get; set; } = new List<Ocupaciones>();
    public DateTime FechaActual { get; set; } = DateTime.Now;


    protected override void OnInitialized()
    {
        if (PersonaId > 0)
        {

            this.persona.PersonaId = PersonaId;
            this.Buscar();
        }
        lista = ocupacionBLL.GetList(o => true);
    }



    public void Nuevo()
    {
        mensaje = "";
        persona = new Personas();
    }

    bool Validar()
    {
        if (persona.FechaNacimiento < FechaActual)
        {
            return true;
        }
        else
        {
            return false;
        }

    }

    public void Guardar()
    {
        bool guardo;

        if (!Validar())
        {
            ShowNotification(
            new NotificationMessage
                {
                    Severity = NotificationSeverity.Error,
                    Summary = "Fecha nacimiento mayor a el dia de hoy"
                });
            return;

        }

        guardo = PersonasBLL.Guardar(persona);

        if (guardo)
        {
            ShowNotification(
            new NotificationMessage
                {
                    Severity = NotificationSeverity.Success,
                    Summary = "Guardado correctamente"
                });

            Nuevo();

        }

    }
    private void Buscar()
    {
        if (persona.PersonaId > 0)
        {
            var encontrado = PersonasBLL.Buscar(persona.PersonaId);

            if (encontrado != null)
                this.persona = encontrado;

        }
    }

    public void Eliminar()
    {
        bool elimino;

        elimino = PersonasBLL.Eliminar(persona);

        if (elimino)
        {
            ShowNotification(
            new NotificationMessage
                {
                    Severity = NotificationSeverity.Error,
                    Summary = "Eliminado"
                });
            Nuevo();

        }

    }

    void ShowNotification(NotificationMessage message)
    {
        notificationService.Notify(message);

    }
}